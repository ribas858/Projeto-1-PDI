DR = 0,25344*(80) - 0,00001*(243-128) + 0,291878*(102-128) = / 0,25344 = 197,460250947
DG = 0,25344*(80) - 0,10001*(243-128) - 0,147122*(102-128) = -19,033674 / 0,25344 = -75,101302083
DB = 0,25344*(80) + 0,51499*(243-128) - 0,000122*(102-128) = 145,405326 / 0,25344 = 573,726822917
D = 0,25344

R = (0,25344 * Y - 0,00001 * U + 0,291878 * V) / 0,25344
G = (0,25344 * Y - 0,10001 * U - 0,147122 * V) / 0,25344
B = (0,25344 * Y + 0,51499 * U - 0,000122 * V) / 0,25344


[ 0.299 0.587 0.114; -0.147 -0.289 0.436; 0.615 -0.515 -0.100 ]

Y = 0.299 * R + 0.587 * G - 0.114 * B
U = -0.147 * R - 0.289 * G + 0.436 * B
V = 0.615 * R - 0.515 * G - 0.100 * B

Y1 U1 V1
Y2
Y3 U2 V2
Y4

|Y1 U1 V1 Y2 U2 V2 Y3 Y4|

ffmpeg -i verde.png -pix_fmt yuv420p verde.yuv
ffmpeg -i input.jpg -f rawvideo -pix_fmt yuv420p output.yuv
ffplay -f rawvideo -pixel_format yuv420p -video_size 200x200 0002.yuv

%disp(['Comp U: ', num2str(k_u), ' Comp V: ', num2str(k_v)]);
disp('FIM: ');
disp(['Origem_UV: ', num2str(origem_UV)]);
disp(['Comp Y: ', num2str(k_y)]);
disp(['Comp U: ', num2str(k_u)]);
disp(['Comp V: ', num2str(k_v)]);

fprintf('\n');
disp('Y: ');
disp(Y);
fprintf('\n');

disp('U: ');
disp(U);
fprintf('\n');

disp('V: ');
disp(V);




pos atual + 1		
pos atual + width
pos atual + width + 1


backup =================================================================================

for i = 1 : w_novo*h_novo
  if Y_novo(i) == 0
    if i - w_novo >= 1
      Y_novo(i) = Y_novo(i-w_novo);
    else
      if i - 1 >= 1
        Y_novo(i) = Y_novo(i-1);  
      end
    end
  end
end

for i = 1 : (w_novo * h_novo)
  if Y_novo(i) == 0
    if i - w_novo >= 1
      Y_novo(i) = Y_novo(i-w_novo);
    elseif i - 1 >= 1
      Y_novo(i) = Y_novo(i-1);
    end
  end
end

function [Y_novo, U_novo, V_novo, w_novo, h_novo] = redimencionar(Y, U, V, w, h, mult, brilho, crominancia)
  
  if crominancia == 1
    U_novo = [];
    U_aux = [];
    intervalo = 0;
    for i = 1 : size(U, 1)
      U_novo = [U_novo; U(i)];
      U_aux = [U_aux; U(i)];
      intervalo = intervalo + 1;
      if intervalo == w/2
        U_novo = [U_novo; U_aux];
        U_aux = [];
        intervalo = 0;
      end
    end
    
    V_novo = [];
    V_aux = [];
    intervalo = 0;
    for i = 1 : size(V, 1)
      V_novo = [V_novo; V(i)];
      V_aux = [V_aux; V(i)];
      intervalo = intervalo + 1;
      if intervalo == w/2
        V_novo = [V_novo; V_aux];
        V_aux = [];
        intervalo = 0;
      end
    end
    
    if brilho == 0
      Y_novo = Y;
    end
    w_novo = w * 2;
    h_novo = h * 2;
  end
  
  if brilho == 1
  
    Y_novo = [];
    intervalo = 0;
    
    for i = 1 : size(Y, 1)
       Y_novo = [Y_novo; Y(i); 0];
       intervalo = intervalo + 1;
       if intervalo == w
         for j = 1 : (w*2)
            Y_novo = [Y_novo; 0];
         end
         intervalo = 0;
       endif
    end
    
    w_novo = w * 2;
    h_novo = h * 2;
    
    %print_yuv_matriz_pixels(Y_novo, w_novo);
    
    Y_novo = preenche_pixels(Y_novo, w_novo, h_novo);
    if crominancia == 0
      U_novo = U;
      V_novo = V;
    end
    
  end
    
  mult = mult - 1;
  if mult > 0
    [Y_novo, w_novo, h_novo] = redimencionar(Y_novo, w_novo, h_novo, mult, brilho, crominancia);
  end
  
  disp(['mult: ', num2str(mult), ' w: ', num2str(w_novo), ' h: ', num2str(h_novo)]);
  
end







